import redis
import time

r = redis.Redis(host='localhost', port=6379, decode_responses=True)

TOTAL_RUNS = 30  # –ó–∞–ø—É—Å–∫–∞–µ–º 30 —Ä–∞–∑ –¥–ª—è –∑–∞–º–µ—Ä–∞ —Å—Ä–µ–¥–Ω–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
SCANNED_LIMIT = 250_000  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ 250k –∫–ª—é—á–µ–π

total_exec_time = 0

for _ in range(TOTAL_RUNS):
    count = 0
    cursor = 0
    scanned_keys = 0  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –∫–ª—é—á–µ–π

    start_time = time.time()

    while True:
        cursor, keys = r.scan(cursor, match="game:*", count=5000)  # batch 5000
        scanned_keys += len(keys)

        if not keys:
            continue

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º pipeline –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        with r.pipeline() as pipe:
            for key in keys:
                pipe.hgetall(key)
            results = pipe.execute()

        for game_data in results:
            release_date = game_data.get("release_date", "")
            if release_date.startswith("2021"):
                count += 1

        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è, –µ—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏–ª–∏ 250 000 –∫–ª—é—á–µ–π
        if scanned_keys >= SCANNED_LIMIT or cursor == 0:
            break

    end_time = time.time()
    exec_time = end_time - start_time
    total_exec_time += exec_time
    print(f"üîπ –ó–∞–ø—É—Å–∫ {_ + 1}: {exec_time:.3f} —Å–µ–∫, –Ω–∞–π–¥–µ–Ω–æ {count} –∏–≥—Ä, –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ {scanned_keys} –∫–ª—é—á–µ–π")

average_exec_time = total_exec_time / TOTAL_RUNS
print(f"\nüöÄ –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {average_exec_time:.3f} —Å–µ–∫")
